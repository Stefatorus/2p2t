From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Stefatorus <stefanluciandeleanu@gmail.com>
Date: Wed, 7 Apr 2021 12:05:43 +0300
Subject: [PATCH] Increase light queue performance.


diff --git a/src/main/java/net/minecraft/server/Chunk.java b/src/main/java/net/minecraft/server/Chunk.java
index 4060fd274831088b55477def553c57ef867fd690..f9a6a93fb134f05f786f162eb278b21d23cdf93a 100644
--- a/src/main/java/net/minecraft/server/Chunk.java
+++ b/src/main/java/net/minecraft/server/Chunk.java
@@ -801,7 +801,7 @@ public class Chunk {
             if (chunk_enumtileentitystate == Chunk.EnumTileEntityState.IMMEDIATE) {
                 tileentity = this.g(blockposition);
                 this.world.setTileEntity(blockposition, tileentity);
-            } else if (chunk_enumtileentitystate == Chunk.EnumTileEntityState.QUEUED) {
+            } else if (chunk_enumtileentitystate == Chunk.EnumTileEntityState.QUEUED && this.y.size() < 1024) {
                 this.y.add(blockposition);
             }
         } else if (tileentity.y()) {
@@ -1321,7 +1321,8 @@ public class Chunk {
     }
 
     public void n() {
-        if (this.x < 4096) {
+    	// 2p2t Start - 4048
+        if (this.x < 1024) {
             BlockPosition blockposition = new BlockPosition(this.locX << 4, 0, this.locZ << 4);
 
             for (int i = 0; i < 8; ++i) {
diff --git a/src/main/java/net/minecraft/server/PaperLightingQueue.java b/src/main/java/net/minecraft/server/PaperLightingQueue.java
index f1c013116fc05b7abe7184eae01b715c02c7a058..90621dc696c770d22fb12eb370b0bf9f566252b9 100644
--- a/src/main/java/net/minecraft/server/PaperLightingQueue.java
+++ b/src/main/java/net/minecraft/server/PaperLightingQueue.java
@@ -6,7 +6,7 @@ import it.unimi.dsi.fastutil.objects.ObjectCollection;
 import java.util.ArrayDeque;
 
 class PaperLightingQueue {
-    private static final long MAX_TIME = (long) (1000000000 / 20 * 1.15);
+    private static final long MAX_TIME = (long) (1000000000 / 20 * 0.55);
 
     static void processQueue(long curTime) {
         final long startTime = System.nanoTime();
